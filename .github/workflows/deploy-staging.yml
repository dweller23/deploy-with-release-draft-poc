name: Deploy Staging workflow

on:
  push:
    branches:
      - main

jobs:
  pre-build:
    name: Install packages and run quality gates
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: Install packages
        run: yarn

  build:
    name: Build artifact
    runs-on: ubuntu-latest
    needs: pre-build
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: build
        run: yarn build

      - name: upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-artifact
          path: bin/index.js
          retention-days: 1

  deploy:
    name: Deploy artifact
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - name: download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-artifact
          path: bin

      - name: deploy
        run: yarn deploy stage

  create-release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    strategy:
      matrix:
        region: [ region1, region2 ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}

      - id: sets-a-secret
        run: |
          the_secret="{"ghActionsTest":"secret-value"}"
          echo "::add-mask::$the_secret"
          echo "::set-output name=secret::$the_secret"
      - name: test secret
        run: |
          echo "${{ toJson(steps.sets-a-secret.secret).ghActionsTest }}"
          echo "$SOMETHING"
        env:
          SOMETHING: ${{ toJson(steps.sets-a-secret.secret).ghActionsTest }}
#          password = $(echo steps.sets-a-secret.secret | python -c 'import json, sys; print(json.load(sys.stdin)["ghActionsTest"])')
#          echo $password

      - name: download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-artifact
          path: bin

      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

      - name: region release
        id: region-release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "bin/index.js"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
          tag: ${{ matrix.region }}-${{ steps.package-version.outputs.current-version}}
          name: ${{ matrix.region }}-${{ steps.package-version.outputs.current-version}}

      - name: region release link
        run: echo "${{ steps.region-release.outputs.html_url }}"
